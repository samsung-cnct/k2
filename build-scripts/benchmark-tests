#!/bin/bash
#
# This script is the main controlling test script to run
# the kubernetes benchmark tests w/kube-bench. This script
# assumes you are executing inside a kraken-tools container
#
# In regards to reporting this script just reports:
#   - pass/total checks for each node
#   - cluster summary which simply sums node results

set -o errexit
set -o nounset
set -o pipefail

REMOTE_BENCHMARK_DIR=/home/core/benchmark-test
REMOTE_BENCHMARK_CONF=${REMOTE_BENCHMARK_DIR}/kraken-conf
SSH_CONFIG=~/.kraken/${CLUSTER}/ssh_config
CLUSTER_TEST_RESULTS=./build/tests

main() {
  # this gets the provisioned kraken nodes except the etcd nodes
  declare -a cluster_nodes
  cluster_nodes=$(grep -o "Host .*" ${SSH_CONFIG} | grep -v etcd | awk '{print $2}' | tr '\n' ' ')
  
  local cluster_pass_checks=0
  local cluster_total_checks=0
  mkdir -p ${CLUSTER_TEST_RESULTS}
  
  for node in ${cluster_nodes[@]}; do
    printf "\nSetting up node (%s)\n" "${node}"
    ssh -qF ${SSH_CONFIG} ${node} "mkdir -p ${REMOTE_BENCHMARK_DIR}"
  
    printf "Sending test script to node\n"
    scp -qF ${SSH_CONFIG} ./hack/benchmark-test.sh ${node}:${REMOTE_BENCHMARK_DIR}

    printf "Sending configs to node\n"
    scp -rpqF ${SSH_CONFIG} ./build-scripts/benchmark-conf ${node}:${REMOTE_BENCHMARK_CONF}

    printf "Executing test on node\n"
    ssh -qF ${SSH_CONFIG} core@${node} "cd ${REMOTE_BENCHMARK_DIR}; ./benchmark-test.sh ${node}"

    printf "Getting test results from node\n"
    scp -qF ${SSH_CONFIG} ${node}:${REMOTE_BENCHMARK_DIR}/*results* ${CLUSTER_TEST_RESULTS}

    local pass_checks=$(grep -o "[0-9]\+ checks PASS" ${CLUSTER_TEST_RESULTS}/*${node}-results.txt | awk '{print $1}')
    local fail_checks=$(grep -o "[0-9]\+ checks FAIL" ${CLUSTER_TEST_RESULTS}/*${node}-results.txt | awk '{print $1}')
    local total_checks=$(expr ${pass_checks} + ${fail_checks})
    cluster_pass_checks=$(expr ${pass_checks} + ${cluster_pass_checks})
    cluster_total_checks=$(expr ${total_checks} + ${cluster_total_checks})
    printf "Summary of test for node (%s): %d/%d passed checks\n" "${node}" "${pass_checks}" "${total_checks}"

    printf "Cleaning up node\n"
    ssh -qF ${SSH_CONFIG} ${node} "rm -rf ${REMOTE_BENCHMARK_DIR}"
  done

  printf "\nSummary of tests for cluster (%s): %d/%d passed checks\n" "${CLUSTER}" "${cluster_pass_checks}" "${cluster_total_checks}"

  exit 0
}

main "$@"
