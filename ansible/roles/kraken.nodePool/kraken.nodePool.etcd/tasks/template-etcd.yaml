---
# The cluster UUID can not be used twice, even if cluster formation fails midway.
# Since templates are unconditionally generated, we know terraform will be forced
# to regenerate the instance, or fail on up, since prevent_destroy will be set
# for the terraform resource.
#
# Cf. https://coreos.com/etcd/docs/latest/v2/discovery_protocol.html and
# https://github.com/coreos/etcd/blob/master/Documentation/op-guide/configuration.md
- name: Generate cluster UUID
  command: >
    uuidgen
  register: uuidgen_result
  when:
    - cluster_node_tuple.1.etcdConfig.uuidToken is defined
    - cluster_node_tuple.1.etcdConfig.uuidToken

- debug:
    var: uuidgen_result
    verbosity: 0
  when:
    - cluster_node_tuple.1.etcdConfig.uuidToken is defined
    - cluster_node_tuple.1.etcdConfig.uuidToken

- name: Fail if uuidgen failed
  fail:
    msg: "uuidgen failed with {{ uuidgen_result.stderr }}"
  when:
    - cluster_node_tuple.1.etcdConfig.uuidToken is defined
    - cluster_node_tuple.1.etcdConfig.uuidToken
    - uuidgen_result | failed

- set_fact:
    clusterUuidToken: "{{ uuidgen_result.stdout | lower }}"
  when:
    - cluster_node_tuple.1.etcdConfig.uuidToken is defined
    - cluster_node_tuple.1.etcdConfig.uuidToken

- debug:
    msg: >
      The UUID for (cluster, nodePool) ({{ cluster_node_tuple.0.name }},
      {{ cluster_node_tuple.1.etcdConfig.name }}) is {{ clusterUuidToken }}
    verbosity: 0
  when:
    - cluster_node_tuple.1.etcdConfig.uuidToken is defined
    - cluster_node_tuple.1.etcdConfig.uuidToken

- name: Generate etcd .units.etcd.part files
  template: src=etcd.units.etcd.part.jinja2
            dest="{{ config_base | expanduser }}/{{ cluster_node_tuple.0.name }}/{{ cluster_node_tuple.1.name }}.units.etcd.part"

- name: Generate kraken-ssl .units.etcd.part files
  template: src=etcd.units.kraken-etcd-ssl.part.jinja2
            dest="{{ config_base | expanduser }}/{{ cluster_node_tuple.0.name }}/{{ cluster_node_tuple.1.name }}.units.kraken-etcd-ssl.part"
