---
- set_fact:
    cluster: "{{ cluster_node_tuple.0 }}"
    node: "{{ cluster_node_tuple.1 }}"

# The cluster UUID can not be used twice, even if cluster formation fails midway.
# Since templates are unconditionally generated, we know terraform will be forced
# to regenerate the instance, or fail on up, since prevent_destroy will be set
# for the terraform resource.
#
# Cf. https://coreos.com/etcd/docs/latest/v2/discovery_protocol.html and
# https://github.com/coreos/etcd/blob/master/Documentation/op-guide/configuration.md
- name: Generate cluster UUID
  command: >
    uuidgen
  register: uuidgen_result
  when:
    - node.etcdConfig.uuidToken is defined
    - node.etcdConfig.uuidToken

- name: Fail if uuidgen failed
  fail:
    msg: "uuidgen failed with {{ uuidgen_result.stderr }}"
  when:
    - node.etcdConfig.uuidToken is defined
    - node.etcdConfig.uuidToken
    - uuidgen_result | failed

- set_fact:
    clusterUuidToken: "{{ uuidgen_result.stdout | lower }}"
  when:
    - node.etcdConfig.uuidToken is defined
    - node.etcdConfig.uuidToken

- debug:
    msg: >
      The UUID for (cluster, nodePool) ({{ cluster_node_tuple.0.name }},
      {{ node.etcdConfig.name }}) is {{ clusterUuidToken }}
    verbosity: 0
  when:
    - node.etcdConfig.uuidToken is defined
    - node.etcdConfig.uuidToken

- name: "Generate etcd service units"
  set_fact:
    cloud_config: "{{ cloud_config | combine(new_data, recursive=True) }}"
  vars:
    etcd_unit: "{{ lookup('template','etcd.units.etcd.part.jinja2') | from_yaml }}"
    krakenssl_unit: "{{ lookup('template','etcd.units.kraken-etcd-ssl.part.jinja2') | from_yaml }}"
    coreos: "{{ cloud_config[cluster.name][node.name].coreos | default({}) }}"
    units: "{{ coreos.units | default([]) + etcd_unit + krakenssl_unit }}"
    new_data: '{{ { cluster.name: { node.name: { "coreos": { "units": units } } } } }}'