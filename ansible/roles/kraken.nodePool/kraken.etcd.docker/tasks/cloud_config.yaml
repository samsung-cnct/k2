---
- set_fact:
    cluster: "{{ cluster_node_tuple.0 }}"
    node: "{{ cluster_node_tuple.1 }}"

- name: Add kraken-etcd service file for node {{ node.name }}
  set_fact:
    cloud_config: "{{ cloud_config | default({}) | combine(new_cloud_config, recursive=true) }}"
  vars:
    mounts: "{{ node.nodeConfig.mounts | map(attribute='path') | map('regex_replace', '^/*(.*)$', '\\1.mount') | join(' ') | replace('/', '-') }}"
    ssl_unit: "{{ node.etcdConfig.ssl | ternary('kraken-ssl.service', '') }}"
    ssl_volume: "{{ node.etcdConfig.ssl | ternary('--volume ssl,kind=host,source=/etc/etcd/ssl,readOnly=true','') }}"
    ssl_etcd_flags: >-
      --peer-client-cert-auth
      --peer-trusted-ca-file=/etc/etcd/ssl/peer-ca.pem
      --peer-cert-file=/etc/etcd/ssl/peer.pem
      --peer-key-file=/etc/etcd/ssl/peer-key.pem
      --trusted-ca-file=/etc/etcd/ssl/server-ca.pem
      --cert-file=/etc/etcd/ssl/server.pem
      --key-file=/etc/etcd/ssl/server-key.pem
      --client-cert-auth
    cond_ssl_etcd_flags: "{{ node.etcdConfig.ssl | ternary(ssl_etcd_flags,'') }}"
    http: "{{ node.etcdConfig.ssl | ternary('https','http') }}"
    advertise_client_urls: "{{ node.etcdConfig.clientPorts | map('regex_replace', '^(.*)$', http + '://${DEFAULT_IPV4}:\\1') | join(',') }}"
    listen_client_urls: "{{ node.etcdConfig.clientPorts | map('regex_replace', '^(.*)$', http + '://${DEFAULT_IPV4}:\\1,' + http + '://127.0.0.1:\\1') | join(',') }}"
    listen_peer_urls: "{{ node.etcdConfig.peerPorts | map('regex_replace', '^(.*)$', http + '://${DEFAULT_IPV4}:\\1') | join(',') }}"
    new_files:
      - path: /etc/systemd/system/kraken-etcd.service
        content: |
          [Unit]
          Description=etcd
          After=kraken-networking.service {{ mounts }} {{ ssl_unit }}
          Requires=kraken-networking.service {{ mounts }} {{ ssl_unit }}
          [Service]
          EnvironmentFile=/etc/network-environment
          TimeoutStartSec=0
          RestartSec=15
          Restart=always
          KillMode=none
          ExecStartPre=/bin/mkdir -p /ephemeral/etcd
          ExecStart=/opt/cnct/rkt/rkt run --net=host {{ ssl_volume }} \
           --stage1-path=/opt/cnct/rkt/stage1-fly.aci \
           --insecure-options=image \
           --inherit-env=true \
           --volume data,kind=host,source=/ephemeral/etcd,readOnly=false \
           --volume resolv-conf,kind=host,source=/etc/resolv.conf \
           --mount volume=ssl,target=/etc/etcd/ssl \
           --mount volume=data,target=/ephemeral \
           --mount volume=resolv-conf,target=/etc/resolv.conf \
           quay.io/coreos/etcd:{{ node.etcdConfig.version }} \
           -- --data-dir /ephemeral/etcd {{ cond_ssl_etcd_flags }} \
           --name etcd{{ node.name }} \
           --discovery-srv {{ node.name }}.{{ cluster.name }}.internal \
           --initial-cluster-token {{ node.etcdConfig.clusterToken }} \
           --initial-cluster-state new \
           --advertise-client-urls {{ advertise_client_urls }} \
           --listen-client-urls {{ listen_client_urls }} \
           --initial-advertise-peer-urls {{ listen_peer_urls }} \
           --listen-peer-urls {{ listen_peer_urls }} \
           ---
          ExecStopPost=/opt/cnct/rkt/rkt gc --mark-only
      - path: /etc/systemd/system/kraken-ssl.service
        content: |
          [Unit]
          Description=Setup Network Environment
          Requires=kraken-networking.service
          After=kraken-networking.service
          [Service]
          EnvironmentFile=/etc/network-environment
          RemainAfterExit=yes
          Type=oneshot
          ExecStart=/opt/cnct/rkt/rkt run \
           --insecure-options=image \
           --inherit-env=true \
           --volume input,kind=host,source=/etc/ssl,readOnly=true \
           --volume output,kind=host,source=/etc,readOnly=false \
           --mount volume=input,target=/input \
           --mount volume=output,target=/output \
           --set-env=HOST_IP=${DEFAULT_IPV4} \
           --set-env=SERVICE_DNS_NAME={{ node.name }}.{{ cluster.name }}.internal \
           --set-env=HOST_DNS_NAME=*.{{ node.name }}.{{ cluster.name }}.internal \
           quay.io/samsung_cnct/drunkensmee:v0.5 \
           --exec /assets/generate_etcd.sh
          ExecStopPost=/opt/cnct/rkt/rkt gc --mark-only
    write_files: "{{ cloud_config[cluster.name][node.name].write_files | default([]) }}"
    new_cloud_config: '{{ { cluster.name: { node.name: { "write_files": write_files + new_files }}} }}'

- name: Add runcmd to start and enable kraken-ssl and kraken-etcd
  set_fact:
    cloud_config: "{{ cloud_config | default({}) | combine(new_cloud_config, recursive=true) }}"
  vars:
    new_runcmd:
      - [ systemctl, daemon-reload ]
      - [ systemctl, enable, kraken-ssl, kraken-etcd ]
      - [ systemctl, start, --no-block, kraken-ssl, kraken-etcd ]
    runcmd: "{{ cloud_config[cluster.name][node.name].runcmd | default([]) }}"
    new_cloud_config: '{{ { cluster.name: { node.name: { "runcmd": runcmd + new_runcmd }}} }}'
