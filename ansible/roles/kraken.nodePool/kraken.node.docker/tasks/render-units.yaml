---
- set_fact:
    cluster: "{{ cluster_node_tuple.0 }}"
    node: "{{ cluster_node_tuple.1 }}"

- name: Add kraken-apiserver-ssl and kubelet services to cloud_config
  set_fact:
    cloud_config: "{{ cloud_config | default({}) | combine(new_cloud_config, recursive=true) }}"
  vars:
    new_files:
      - path: /etc/systemd/system/kraken-ssl.service
        content: |
          [Unit]
          Description=Setup Network Environment
          Requires=kraken-networking.service
          After=kraken-networking.service
          [Service]
          EnvironmentFile=/etc/network-environment
          RemainAfterExit=yes
          Type=oneshot
          ExecStart=/opt/cnct/rkt/rkt run \
           --insecure-options=image \
           --inherit-env=true \
           --volume input,kind=host,source=/etc/ssl,readOnly=true \
           --volume output,kind=host,source=/etc,readOnly=false \
           --mount volume=input,target=/input \
           --mount volume=output,target=/output \
           --set-env=HOST_IP=${DEFAULT_IPV4} \
           quay.io/samsung_cnct/drunkensmee:v0.5 \
           --exec /assets/generate_worker.sh
          ExecStopPost=/opt/cnct/rkt/rkt gc --mark-only
      - path: /etc/systemd/system/kubelet.service
        content: |
          [Unit]
          After=docker.service
          After=kraken-ssl.service
          Requires=docker.service
          Requires=kraken-ssl.service
          [Service]
          EnvironmentFile=/etc/network-environment
          ExecStartPre=/bin/mkdir -p /var/lib/kubelet
          ExecStartPre=/bin/mkdir -p /var/log/containers
          ExecStartPre=/bin/mkdir -p /opt/cni/bin
          ExecStartPre=/usr/bin/bash -c '/usr/bin/wget https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz -O - | sudo tar -xz -C /opt/cni/bin'
          ExecStartPre=/bin/mkdir -p /etc/cni/net.d
          ExecStart=/opt/cnct/rkt/rkt run \
            --volume etc-resolv-conf,kind=host,source=/etc/resolv.conf \
            --volume etc-cni,kind=host,source=/etc/cni \
            --volume etc-kubernetes,kind=host,source=/etc/kubernetes \
            --volume etc-etcd-ssl,kind=host,source=/etc/etcd/ssl \
            --volume etc-ssl-certs,kind=host,source=/usr/share/ca-certificates \
            --volume var-lib-docker,kind=host,source=/var/lib/docker \
            --volume var-lib-kubelet,kind=host,source=/var/lib/kubelet \
            --volume var-log,kind=host,source=/var/log \
            --volume os-release,kind=host,source=/usr/lib/os-release \
            --volume run,kind=host,source=/run \
            --volume opt-cni,kind=host,source=/opt/cni \
            --mount volume=etc-resolv-conf,target=/etc/resolv.conf \
            --mount volume=etc-cni,target=/etc/cni \
            --mount volume=etc-kubernetes,target=/etc/kubernetes \
            --mount volume=etc-etcd-ssl,target=/etc/etcd/ssl \
            --mount volume=etc-ssl-certs,target=/etc/ssl/certs \
            --mount volume=var-lib-docker,target=/var/lib/docker \
            --mount volume=var-lib-kubelet,target=/var/lib/kubelet \
            --mount volume=var-log,target=/var/log \
            --mount volume=os-release,target=/etc/os-release \
            --mount volume=run,target=/run \
            --mount volume=opt-cni,target=/opt/cni \
            --insecure-options=image \
            --stage1-from-dir=stage1-fly.aci \
            docker://{{ node.kubeConfig.hyperkubeLocation }}:{{ node.kubeConfig.version }} \
            --exec=/hyperkube -- kubelet \
            --api_servers=https://apiserver.{{ cluster.name }}.internal \
            --register-node=true \
            --node-labels=nodepool={{node.name}} \
            --allow-privileged=true \
            --pod-manifest-path=/etc/kubernetes/manifests \
            --kubeconfig=/etc/kubernetes/kubeconfig.yaml \
            --cluster-dns={{ cluster.dns }} \
            --cluster-domain={{ cluster.domain }} \
            --tls-cert-file=/etc/kubernetes/ssl/worker.pem \
            --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem \
            --network-plugin=cni \
            --network-plugin-dir=/etc/cni/net.d \
            --cloud-provider={{ cluster.providerConfig.provider }} \
            --logtostderr=true
          Restart=always
          RestartSec=10
          [Install]
          WantedBy=multi-user.target
    write_files: "{{ cloud_config[cluster.name][node.name].write_files | default([]) }}"
    new_cloud_config: '{{ { cluster.name: { node.name: { "write_files": write_files + new_files }}} }}'

- name: Add runcmd to start and enable kraken-ssl and kubelet
  set_fact:
    cloud_config: "{{ cloud_config | default({}) | combine(new_cloud_config, recursive=true) }}"
  vars:
    new_runcmd:
      - [ systemctl, daemon-reload ]
      - [ systemctl, enable, kraken-ssl, kubelet ]
      - [ systemctl, start, --no-block, kraken-ssl, kubelet ]
    runcmd: "{{ cloud_config[cluster.name][node.name].runcmd | default([]) }}"
    new_cloud_config: '{{ { cluster.name: { node.name: { "runcmd": runcmd + new_runcmd }}} }}'
