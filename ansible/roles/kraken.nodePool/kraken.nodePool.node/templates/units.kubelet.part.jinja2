- name: kubelet.service
  command: start
  content: |
    [Unit]
    After=docker.service
    After=kraken-ssl.service
    Wants=docker.service
    Wants=kraken-ssl.service
    [Service]
    EnvironmentFile=/etc/network-environment
    ExecStartPre=/usr/bin/mkdir -p /var/lib/kubelet
    ExecStartPre=/usr/bin/mkdir -p /var/log/containers
    ExecStartPre=/usr/bin/mkdir -p /opt/cni/bin
    ExecStartPre=/usr/bin/bash -c '/usr/bin/wget https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz -O - | sudo tar -xz -C /opt/cni/bin'
    ExecStartPre=/usr/bin/mkdir -p /etc/cni/net.d
    ExecStartPre=/usr/bin/systemctl --quiet is-active docker.service kraken-ssl.service
    ExecStart={{ rkt.bin }} run \
      --volume etc-resolv-conf,kind=host,source=/etc/resolv.conf \
      --volume etc-cni,kind=host,source=/etc/cni \
      --volume etc-kubernetes,kind=host,source=/etc/kubernetes \
      --volume etc-ssl-certs,kind=host,source=/usr/share/ca-certificates/mozilla \
      --volume var-lib-docker,kind=host,source=/var/lib/docker \
      --volume var-lib-kubelet,kind=host,source=/var/lib/kubelet \
      --volume var-log,kind=host,source=/var/log \
      --volume os-release,kind=host,source=/usr/lib/os-release \
      --volume run,kind=host,source=/run \
      --volume opt-cni,kind=host,source=/opt/cni \
      --mount volume=etc-resolv-conf,target=/etc/resolv.conf \
      --mount volume=etc-cni,target=/etc/cni \
      --mount volume=etc-kubernetes,target=/etc/kubernetes \
      --mount volume=etc-ssl-certs,target=/etc/ssl/certs \
      --mount volume=var-lib-docker,target=/var/lib/docker \
      --mount volume=var-lib-kubelet,target=/var/lib/kubelet \
      --mount volume=var-log,target=/var/log \
      --mount volume=os-release,target=/etc/os-release \
      --mount volume=run,target=/run \
      --mount volume=opt-cni,target=/opt/cni \
      --insecure-options=image \
      --stage1-path={{ rkt.stage1 }} \
      docker://{{ node.kubeConfig.hyperkubeLocation }}:{{ node.kubeConfig.version }} \
      --exec=/hyperkube -- kubelet \
      --register-node=true \
      {% if taints_exist == true %}--register-with-taints={% set comma = joiner(",") %}{% for taint in taints  %}{{ comma() }}{{taint.key}}={{taint.value}}:{{taint.effect}}{% endfor %}{% endif %} \
      --node-labels=nodepool={{ node.name }}{% if node.nodeConfig.providerConfig.label is defined %},{% set comma = joiner(",") %}{% for label in node.nodeConfig.providerConfig.label  %}{{ comma() }}{{ label.name }}={{ label.value }}{% endfor %}{% endif %} \
      --hostname-override=%H \
      --allow-privileged=true \
      --pod-manifest-path=/etc/kubernetes/manifests \
      --kubeconfig=/etc/kubernetes/kubeconfig.yaml \
      --cluster-dns={{ cluster.dns }} \
      --cluster-domain={{ cluster.domain }} \
      --tls-cert-file=/etc/kubernetes/ssl/worker.pem \
      --tls-private-key-file=/etc/kubernetes/ssl/worker-key.pem \
      --network-plugin=cni \
      --cni-conf-dir=/etc/cni/net.d \
      --cni-bin-dir=/opt/cni/bin \
      --cloud-provider={{ cluster.providerConfig.provider }} \
      --logtostderr=true
    Restart=always
    RestartSec=10
    [Install]
    WantedBy=multi-user.target
