---
- set_fact:
    taints: "{{ new_taints }}"
    taints_exist: "{{ new_taints | length > 0 | bool }}"
  vars:
    nodePoolTaintQuery: "{{ node | json_query('schedulingConfig.taints[*]') }}"
    nodePoolTaints: "{{ (nodePoolTaintQuery == '') | ternary([],nodePoolTaintQuery) }}"
    nodeTypeTaintQuery: "{{ node | json_query('nodeConfig.taints[*]') }}"
    nodeTypeTaints: "{{ (nodeTypeTaintQuery == '') | ternary([],nodeTypeTaintQuery) }}"
    new_taints: "{{ nodePoolTaints + nodeTypeTaints }}"

- name: "Generate master kubelet and apiserver service units"
  set_fact:
    cloud_config: "{{ cloud_config | combine(new_data, recursive=True) }}"
  vars:
    kubelet_versioned_unit: "{{ lookup('template', kubernetes_minor_versions[ cluster.name ] + '/units.kubelet.part.jinja2') }}"
    kubelet_default_unit: "{{ lookup('template', 'units.kubelet.part.jinja2') }}"
    kubelet_unit: '{{ (kubelet_versioned_unit | is_empty) | ternary(kubelet_default_unit, kubelet_versioned_unit) | from_yaml }}'
    ssl_config_unit: '{{ lookup("template", "units.kraken-worker-ssl.part.jinja2") | from_yaml }}'
    coreos: "{{ cloud_config[cluster.name][node.name].coreos | default({}) }}"
    units: "{{ coreos.units | default([]) + kubelet_unit + ssl_config_unit }}"
    new_data: '{{ { cluster.name: { node.name: { "coreos": { "units": units } } } } }}'