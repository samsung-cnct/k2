---
- name: Get modules
  command: >
    terraform get -no-color -update=true {{ config_base | expanduser }}/{{kraken_config.cluster}} chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  ignore_errors: yes

- name: Run cluster {{kraken_action}}
  command: >
    terraform apply -input=false -no-color {{ config_base | expanduser }}/{{kraken_config.cluster}} chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  when: kraken_action == 'up'
  register: up_result
  until: up_result.rc == 0
  retries: "{{action_retries}}"
  delay: 15
  ignore_errors: yes

- name: Check for terraform success
  fail: "msg='Run cluster {{kraken_action}} failed!'"
  when: (kraken_action == 'up') and (up_result|failed)
  changed_when: false

- name: Get kraken endpoint
  shell: > 
    terraform output -no-color kraken_endpoint chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  register: endpoint_result
  when: kraken_action == 'up'

- name: Set the kraken end point fact
  set_fact:
    kraken_endpoint: "{{ endpoint_result.stdout }}"
  when: endpoint_result|succeeded and not endpoint_result|skipped

- name: Get kraken aws_route53_zone.private_zone.zone_id
  shell: > 
    terraform output -no-color kraken_private_zone_id chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  register: zone_result 
  changed_when: false

- name: Write zone id to file (THANKS, TERRAFORM)
  copy: >
    content={{ zone_result.stdout }} dest={{ config_base | expanduser }}/{{kraken_config.cluster}}/route53_zone

- name: Kill off the hosted zone using cli53 (THANKS, TERRAFORM)
  command: >
    cli53 delete --purge {{ lookup('file', '{{config_base}}/{{kraken_config.cluster}}/route53_zone') }}
  when: kraken_action == 'down'
  ignore_errors: yes

- name: Remove the route 53 zone from state (THANKS, TERRAFORM)
  command: >
    terraform state rm aws_route53_zone.private_zone chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  when: kraken_action == 'down'
  ignore_errors: yes

- name: Check for terraform state file
  stat: path={{ config_base | expanduser }}/{{kraken_config.cluster}}/terraform.tfstate
  register: tfstate
  when: (kraken_action == 'down')

- name: Run terraform destroy
  command: >
    terraform destroy -input=false -no-color -force {{ config_base | expanduser }}/{{kraken_config.cluster}} chdir={{ config_base | expanduser }}/{{kraken_config.cluster}}
  when: (kraken_action == 'down') and (tfstate.stat.exists)
  register: down_result
  until: down_result.rc == 0
  retries: "{{action_retries}}"
  delay: 15

- name: clean the terraform state generated prefix and other misc files.
  file:
    path: "{{ config_base | expanduser }}/{{kraken_config.cluster}}/{{item}}"
    state: absent
  when: kraken_action == 'down'
  with_items:
    - route53_zone
    - aws_prefix
    - terraform.tfstate
    - terraform.tfstate.backup
