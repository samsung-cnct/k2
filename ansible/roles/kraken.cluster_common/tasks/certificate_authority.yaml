---
- name: Make sure generated folder for certs is there
  file:
    path: "{{ config_base | expanduser }}/{{ cluster.name }}/certs"
    state: directory

- name: Generate self-signed CA key
  command: >
    openssl genrsa -out {{ config_base | expanduser }}/{{ cluster.name }}/certs/ca-key.pem 2048
  args:
    creates: "{{ config_base | expanduser }}/{{ cluster.name }}/certs/ca-key.pem"

- name: Generate self-signed CA
  command: >
      openssl req -x509 -new -nodes
      -key {{ config_base | expanduser }}/{{ cluster.name }}/certs/ca-key.pem
      -days 7300
      -out {{ config_base | expanduser }}/{{ cluster.name }}/certs/ca.pem
      -subj /CN=kraken-ca
  args:
    creates: "{{ config_base | expanduser }}/{{ cluster.name }}/certs/ca.pem"

- name: Generate certificate authority file for {{ node.name }}
  set_fact:
    cloud_config: "{{ cloud_config | default({}) | combine(new_cloud_config, recursive=true) }}"
  vars:
    new_files:
      - path: /etc/ssl/ca.pem
        encoding: "gz+b64"
        content: "{{ lookup('file', '{{config_base}}/{{cluster.name}}/certs/ca.pem' | expanduser) | gz | b64encode }}"
      - path: /etc/ssl/ca-key.pem
        encoding: "gz+b64"
        content: "{{ lookup('file', '{{config_base}}/{{cluster.name}}/certs/ca-key.pem' | expanduser) | gz | b64encode }}"
    write_files: "{{ cloud_config[cluster.name][node.name].write_files | default([]) }}"
    new_cloud_config: '{{ { cluster.name: { node.name: { "write_files": write_files + new_files }}} }}'
