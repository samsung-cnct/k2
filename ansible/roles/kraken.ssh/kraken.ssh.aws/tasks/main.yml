---
- name: Set aws credential lookup parameters
  set_fact:
    aws_credentials_access_lookup_string: >
        aws_access_key_id
        section={{ kraken_config.providerConfig.authentication.credentialsProfile }}
        file={{ kraken_config.providerConfig.authentication.credentialsFile }}
    aws_credentials_secret_lookup_string: >
        aws_secret_access_key
        section={{ kraken_config.providerConfig.authentication.credentialsProfile }}
        file={{ kraken_config.providerConfig.authentication.credentialsFile }}

- name: Set aws keys from credentials file if it exists
  set_fact:
    aws_access_key: "{{ lookup('ini', aws_credentials_access_lookup_string) }}"
    aws_secret_key: "{{ lookup('ini', aws_credentials_secret_lookup_string) }}"
  when: >
      kraken_config.providerConfig.authentication.credentialsFile not in ['',None]
      and kraken_config.providerConfig.authentication.credentialsProfile not in ['',None]
      and kraken_config.providerConfig.authentication.credentialsFile|is_file

- name: Override aws keys if set explicitly
  set_fact:
      aws_access_key: "{{ kraken_config.providerConfig.authentication.accessKey }}"
      aws_secret_key: "{{ kraken_config.providerConfig.authentication.accessSecret }}"
  when: >
      kraken_config.providerConfig.authentication.accessKey not in ['',None]
      and kraken_config.providerConfig.authentication.accessSecret not in ['',None]

- name: Validate aws_access_key
  fail:
    msg: "AWS access key not configured"
  when: aws_access_key|default('') == ''

- name: Validate aws_secret_key
  fail:
    msg: "AWS secret key not configured"
  when: aws_secret_key|default('') == ''

- name: Gather inventory of all cluster nodes
  ec2_remote_facts:
    region: "{{kraken_config.providerConfig.region}}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    filters:
      "tag:k2-nodepool": "{{item.name}}"
      "tag:Name": "{{kraken_config.cluster}}_{{kraken_config.resourcePrefix}}_{{item.name}}*"
  with_items: "{{kraken_config.nodepool}}"
  register: ec2_results

- name: Generate ssh inventory
  template: src=ssh_config.jinja2
    dest="{{ config_base | expanduser }}/{{kraken_config.cluster}}/ssh_config"
